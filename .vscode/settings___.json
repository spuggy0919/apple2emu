{
    "files.defaultLanguage": "c",
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.acceptSuggestionOnEnter": "off",
    "code-runner.runInTerminal": true,
    "code-runner.executorMap": {
        // // 0.Only One Simple C/C++ file build, compile, debug...
        //"c": "cd $dir && gcc -std=c11 -stdlib=libc++  $fileName  -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        //"cpp": "cd $dir && g++ -std=c++11 -stdlib=libc++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
        //"c": "cd $dir && make  && ./fileNameWithoutExt && make clean",
        //"cpp": "cd $dir && make && ./fileNmaeWithoutExt && make clean"
        // "c": "cd $dir && make main  && ../build/main && make clean",
        // "cpp": "cd $dir && make main && ../build/main && make clean"
        // 1.0 Reference
        // Thanks chinese website blogger!
        // (Configure multiple c file compilation with vscode on Mac os)
        // https://blog.csdn.net/songjun007/article/details/117641162
        //"c": "cd $dir && gcc -std=c11 -stdlib=libc++  -I ${workspaceFolder}/inc ${workspaceFolder}/*.c  -o ${workspaceFolder}/build/${fileBasenameNoExtension} && $dir$fileNameWithoutExt",
        //"cpp": "cd $dir && g++ -std=c++11 -stdlib=libc++ -I ${workspaceFolder}/inc ${workspaceFolder}/*.cpp -o ${workspaceFolder}/build/${fileBasenameNoExtension} && $dir$fileNameWithoutExt"
        // 1.1Use gcc or g++
        // "c": "cd $dir && gcc -std=c11 -stdlib=libc++  $dir/../src/*.c  -o $dir/../build/$fileNameWithoutExt && $dir/../build/$fileNameWithoutExt",
        //"cpp": "cd $dir && g++ -std=c++11 -stdlib=libc++  $dir/../src/*.cpp -o $dir/../build/$fileNameWithoutExt && $dir/../build/$fileNameWithoutExt"
        //
        // clang -g /Users/marryme/VSCode/CppProject/fitBody/src/bank.cpp /Users/marryme/VSCode/CppProject/fitBody/src/main.cpp -o /Users/marryme/VSCode/CppProject/fitBody/build/main
        // 1.2Use clang or clang++ 
        //"c": "cd $dir && clang -std=c11 -stdlib=libc++  $dir/../src/*.c  -o $dir/../build/$fileNameWithoutExt && $dir/../build/$fileNameWithoutExt",
        //"cpp": "cd $dir && clang++ -std=c++11 -stdlib=libc++  $dir/../src/*.cpp -o $dir/../build/$fileNameWithoutExt && $dir/../build/$fileNameWithoutExt"
        // Not Use Makefile settings.json Version
        // "c": "cd $dir/src && clang -std=c11 -stdlib=libc++  $dir/src/*.c  -o $dir/../build/$fileNameWithoutExt && $dir/../build/$fileNameWithoutExt", // Have changed
        "c": "cd $dir/src && clang -std=c11 -stdlib=libc++  $dir/src/*.c  $dir/src/*.h -I /Library/Frameworks/SDL2.framework/** -o $dir/../build/$fileNameWithoutExt && $dir/../build/helloc", // Have changed
        "cpp": "cd $dir/src && clang++ -std=c++11 -stdlib=libc++  $dir/src/*.cpp -o $dir/../build/$fileNameWithoutExt && $dir/../build/hellocpp" // Have changed
        // This is Using Makefile settings.json Version
        // The Makefile was under the project root directory "~/fitBody/"
        //  "c": "cd $dir/../ && make && $dir/../build/$fileNameWithoutExt && make clean",
        // "cpp": "cd $dir/../ && make && $dir/../build/$fileNameWithoutExt && make clean"
    },
    "code-runner.saveFileBeforeRun": true,
    "code-runner.preserveFocus": false,
    "code-runner.clearPreviousOutput": false,
    "code-runner.ignoreSelection": true,
    "C_Cpp.clang_format_sortIncludes": true,
    "editor.formatOnType": true,
    "clang.cxxflags": [
        "-std=c++11"
    ],
    "clang.cflags": [
        "-std=c11"
    ],
    "C_Cpp.updateChannel": "Insiders",
    "[makefile]": {
        "editor.insertSpaces": true
    },
    "C_Cpp.default.includePath": [
        "${workspaceFolder}/inc"
    ],
    "clang.completion.enable": true,
    "files.associations": {
        "stdio.h": "c"
    },
    "cmake.configureOnOpen": false
}